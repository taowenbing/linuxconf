# NetBSD bmake
DEBUG= 1
PROG= ${.CURDIR}/${SRCS:[1]:T:R}
LIB = ${.CURDIR}/lib/libtlpi.a

SRCS= main.c
LIBSRCS= lib/error_functions.c lib/get_num.c

OBJS= ${SRCS:T:N*.h:R:S/$/.o/}
LIBOBJS= ${LIBSRCS:T:N*.h:R:S/$/.o/}
_objdir = ${.CURDIR}/objs
.if !exists(${_objdir}/) 
_objdir_made != echo ${_objdir}/; mkdir -p ${_objdir}
.endif
_allsrcs= ${SRCS} ${LIBSRCS}
SRC_DIRS= ${_allsrcs:H:O:u:%=${.CURDIR}/%}
.OBJDIR: ${_objdir}
.PATH: ${SRC_DIRS}
.NOPATH: ${OBJS}

CC = gcc
CXX = g++
CXX.c=
AS := ${CC} -c
ASM = nasm
LD = ld
LD.c=
AR = ar
RM = rm -f

CFLAGS = -Wall -pipe ${SRC_DIRS:%=-I%}
CXXFLAGS = -Wall -pipe ${SRC_DIRS:%=-I%}
AFLAGS = -Wall -pipe
ASMFLAGS = -felf64
LDFLAGS =
BLDFLAGS= -e _start -Ttext=${BINARY_ORG} -N -S --oformat binary
BINARY_ORG = 0x0

.if make(all)
CFLAGS += -O2 #-march=native -mfpmath=sse
CXXFLAGS += -O2
AFLAGS += -O2
ASMFLAGS += -Ox
.elif ${DEBUG} != 0
CFLAGS += -g
CXXFLAGS += -g
AFLAGS += -g
ASMFLAGS += -g -O0
.endif

.PHONY: all objs run clean cleandep
.SUFFIXES: .asm
all: ${PROG}
objs: ${OBJS}

.if empty(CXX.c)
GCC = ${CC}
.else
GCC = ${CXX}
.endif
${PROG}: ${OBJS} ${LIB}
.if !empty(LD.c)
	${LD} -o ${.TARGET} ${.ALLSRC} ${BLDFLAGS}
.else
	${GCC} -o ${.TARGET} ${.ALLSRC} ${LDFLAGS}
.endif

${LIB}: ${LIBOBJS}
	${AR} crs ${.TARGET} ${.ALLSRC}

.c.o:
	${CC} ${CFLAGS} -o ${.TARGET} -c ${.IMPSRC}

.cc.o .C.o:
	${CXX} ${CXXFLAGS} -o ${.TARGET} -c ${.IMPSRC}

.s.o .S.o:
	${AS} ${AFLAGS} -o ${.TARGET} -c ${.IMPSRC}

.asm.o:
	${ASM} ${ASMFLAGS} -o ${.TARGET} ${.IMPSRC}

clean:
	${RM} ${OBJS}

run: ${PROG}
	@${PROG}

# generated dependency files
_depsrcs=${_allsrcs:M*.c}
.if !empty(_depsrcs)
_depsrcs:=${_depsrcs:T:R:S/$/.d/}
cleandep: clean
	${RM} ${_depsrcs}
.if defined(gendep)
CFLAGS_MD?=-MMD
CFLAGS_MF?=-MF ${.TARGET:T:R}.d -MT ${.TARGET:T:R}.o
CFLAGS+= ${CFLAGS_MD} ${CFLAGS_MF}
.endif
.for d in ${_depsrcs}
.dinclude "$d"
.endfor
.endif
